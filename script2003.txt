let tasks = [];
let currentPage = 1;
let showTasksType = 'all'; // active, completed, all

const addButton = document.querySelector('.container-input__button');
const inputField = document.querySelector('.container-input__input');
let tasksContainer = document.querySelector('.container-tasks');
let paginationLists = document.querySelector('.container__pagination-list');
const taskscontainer = document.querySelector('.tasksContainer');
const container = document.querySelector('.container');
const countTask = document.getElementById('taskCounter');
const countActiveTask = document.getElementById('taskCounterActive');
const countComletedTask = document.getElementById('taskCounterCompleted');
const completeAllTasksBtn = document.querySelector('.container__completed-all-tasks');
//   const editingTasks = document.querySelector('.container-tasks-task__text');
const deleteBtn = document.querySelector('.container-tasks-task-buttons__delete');
const changeCheck = document.querySelector('.container-tasks-task__checkbox');
const showAll = document.querySelector('.container__show-all');
const showActive = document.querySelector('.container__show-active');
const showCompleted = document.querySelector('.container__show-completed');
const deleteAllCheckedTasksBtn = document.querySelector('.container__delete-all-completed-tasks');

function renderCountTasks() {
  countTask.innerHTML = tasks.length;
  let activeCount = 0;
  let completedCount = 0;
  tasks.forEach((task) => {
    if (!task.tasksIsCompleted) {
      activeCount += 1;
    } else {
      completedCount += 1;
    }
  });
  console.log('a', activeCount);
  console.log('c', completedCount);
  countActiveTask.innerHTML = activeCount;
  countComletedTask.innerHTML = completedCount;
}

function tasksPagination() {
  paginationLists.parentNode.removeChild(paginationLists);

  taskscontainer.insertAdjacentHTML('beforeend', '<div class="container__pagination-list"></div>')
  paginationLists = document.querySelector('.container__pagination-list');
  let pagesCount = Math.trunc(tasks.length / 5);

  if (pagesCount * 5 !== tasks.length || pagesCount === 0) {
    pagesCount += 1;
  }

  for (let i = 0; i < pagesCount; i += 1) {
    const button = `<button class = "container__paginations-list_lists" id="paginationButton${i + 1}">${i + 1}</button>`;
    paginationLists.insertAdjacentHTML('beforeend', button);
  }

  return pagesCount;
}

function tasksRender(page) {
  let i = 1;
  tasksContainer.parentNode.removeChild(tasksContainer);

  container.insertAdjacentHTML('beforeend', '<div class="container-tasks"></div>');
  tasksContainer = document.querySelector('.container-tasks');
  tasks.forEach((task) => {
    const taskHtml = `<div class="container-tasks-task" id="task${task.id}">
      <input class="container-tasks-task__checkbox" id="taskCheckbox${task.id}" type="checkbox" ${task.tasksIsCompleted ? `checked=${task.tasksIsCompleted}` : ''} onChange = "onChangeCheckbox(event)"/>
      <p class="container-tasks-task__text" id="taskCheckbox${task.id}" type="checkbox" ${task.tasksIsCompleted ? `checked=${task.tasksIsCompleted}` : ''}>${task.tasksName}</p>
      <div class="container-tasks-task-buttons">
          <button class="container-tasks-task-buttons__delete" type="button" id="taskCheckbox${task.id}" type="checkbox" ${task.tasksIsCompleted ? `checked=${task.tasksIsCompleted}` : ''}>X</button>
      </div>
  </div>`;
    if (showTasksType === 'active' && !task.tasksIsCompleted) {
      tasksContainer.insertAdjacentHTML('beforeend', taskHtml);
    }
    if (showTasksType === 'completed' && task.tasksIsCompleted) {
      tasksContainer.insertAdjacentHTML('beforeend', taskHtml);
    }
    if ((i > (currentPage - 1) * 5 && i <= (currentPage * 5)) && showTasksType === 'all') {
      tasksContainer.insertAdjacentHTML('beforeend', taskHtml);
    }
    i += 1;
  });
  renderCountTasks();
  console.log(tasks);
  if (showTasksType === 'all') {
    tasksPagination();
  } else {
    paginationLists.parentNode.removeChild(paginationLists);
    taskscontainer.insertAdjacentHTML('beforeend', '<div class="container__pagination-list"></div>')
    paginationLists = document.querySelector('.container__pagination-list');
  }
}

tasksRender(currentPage);

function addTask() {
  const taskText = inputField.value;
  if (taskText.trim() !== '') {
    tasks.push({
      tasksName: taskText,
      tasksIsCompleted: false,
      id: Math.floor(Math.random() * (100000 - 1) + 1),
    });
    tasksRender(currentPage);
  }
}

function deleteTasks() {
  console.log('click!!!');
  // const taskId = event.target.id.replace('taskCheckbox', '');
  // tasks.forEach((task) => {
  //   if (Number(taskId) === task.id) {
  //     task = [...task].splice(task, 1);
  //   }
  // });
  // tasksRender(currentPage);
}

function deleteAllCheckedTasks() {
  tasks = tasks.filter((todo) => !todo.tasksIsCompleted);
  tasksRender(currentPage);
}

function completeAllTask() {
  completeAllTasksBtn.checked = true;
  tasks.forEach((task) => {
    const taskCopy = task;
    taskCopy.tasksIsCompleted = completeAllTasksBtn.checked;
  });
  tasksRender(currentPage);
}

function onChangeCheckbox(event) {
  const taskId = event.target.id.replace('taskCheckbox', '');
  for (const task in tasks) {
    if (Number(taskId) == tasks[task].id) {
      tasks[task].tasksIsCompleted = !tasks[task].tasksIsCompleted;
      break;
    }
  }
  tasksRender(currentPage);
  console.log(tasks);
}

function showAllTasks() {
  showTasksType = 'all';
  tasksRender(currentPage);
}
function showActiveTasks() {
  showTasksType = 'active';
  tasksRender(currentPage);
}
function showCompletedTasks() {
  showTasksType = 'completed';
  tasksRender(currentPage);
}

// function editTask(){

// }

addButton.addEventListener('click', addTask);

// addButton.addEventListener('keydown', (event) => {
//   const key = event.which || event.keyCode;
//   if (key === 13) {
//     addButton.click();
//   }
// });
// deleteBtn.addEventListener('click', deleteTasks);

// removeTasks.addEventListener('click', deleteTasks);

// changeCheck.addEventListener('click', (event) => onChangeCheckbox(event));

showAll.addEventListener('click', showAllTasks);

showActive.addEventListener('click', showActiveTasks);

showCompleted.addEventListener('click', showCompletedTasks);

deleteAllCheckedTasksBtn.addEventListener('click', deleteAllCheckedTasks);

completeAllTasksBtn.addEventListener('click', completeAllTask);

